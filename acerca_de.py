# Acerca de GuardianClima ITBA.

def mostrar_info():
    print("\n=== Acerca de GuardianClima ITBAüå§Ô∏è ===\n")
    print("GuardianClima ITBA es una aplicaci√≥n desarrollada en un contexto educativo.")
    print("Permite consultar el clima actual de cualquier ciudad, guardar registros, ")
    print("visualizar estad√≠sticas globales de uso, y obtener recomendaciones de vestimenta mediante IA.")
    print("\nFuncionalidades principales: login simulado, validaci√≥n de contrase√±as, clima en tiempo real (OpenWeatherMap), IA para vestimenta (Google Gemini).")
    print("\n- Men√∫ de Acceso (Pre-Login): Al iniciar la aplicaci√≥n, el usuario ingresa al Men√∫ de Acceso, donde tiene tres opciones:")
    print("  * 1. Iniciar sesi√≥n: Permite al usuario autenticarse con su nombre y contrase√±a previamente registrados.")
    print("  * 2. Registrar nuevo usuario: Permite crear un nuevo usuario, validando que la contrase√±a sigua cirterios de seguridad.")
    print("  * 3. Salir: Finaliza la ejecuci√≥n del programa.")
    print("\n‚ÄºÔ∏èAdvertencia de seguridad!!: Este sistema es un simulador educativo. ")
    print(" Los usuarios y contrase√±as son almacenados en un archivo CSV por motivos pedag√≥gicos, por lo tanto, NO ofrece seguridad para aplicaciones reales.")
    print(" En contextos profesionales se deber√≠an implementar c√≥digos de cifrado y t√©cnicas de hashing con mayor complejidad para proteger las credenciales de los usuarios.") 
    print(" NO utilice ninguna contrase√±a personal en est√° aplicaci√≥n.\n")
    print("- Men√∫ Principal (Post-Login): Luego de iniciar sesi√≥n exitosamente, el usuario accede al men√∫ principal, donde dispone de las siguientes opciones:")
    print("  * 1. Consultar clima actual: El usuario ingresa una ciudad y obtiene el clima actual consultando a la API de OpenWeatherMap. Los resultados se guardan autom√°ticamente en el historial global.")
    print("  * 2. Ver historial personal: Permite al usuario consultar su historial de b√∫squedas anteriores, filtrado por ciudad.")
    print("  * 3. Estad√≠sticas globales de uso: Muestra estad√≠sticas calculadas a partir del historial de consultas de todos los usuarios: ciudad m√°s consultada, cantidad total de consultas y temperatura promedio. ")
    print("  * 4. Consejo de Vestimenta (IA): Utiliza la API de Gemini para generar sugerencias de vestimenta personalizadas seg√∫n la consulta que desee el usuario.")
    print("  * 5. Acerca de Guardi√°nClima ITBA: Presenta descripci√≥n general de la aplicacion.")
    print("  * 6. Cerrar sesi√≥n: Finalizadores la sesi√≥n actual y vuelve al Men√∫ de Acceso.")
    print("\n ‚öôÔ∏èFuncionamiento interno.")
    print("- Creaci√≥n de usuarios y validaci√≥n de contrase√±as: El registro se realiza mediante el ingreso de un nombre de usuario √∫nico y contrase√±a. Las contrase√±as son validadas de manera estricta antes de ser aceptadas.")
    print("Los criterios son: Minimo 12 caracteres, al menos: una may√∫scula, una min√∫scula, un n√∫mero, un caracter especial. En caso de no cumplir se muestra el listado de requisitos y sugerencias.")
    print("Si la contrase√±a es v√°lida, el usuario queda automaticamente registrado y logueado.")
    print("- Obtenci√≥n de datos clim√°ticos y guardado en el historial: La consulta se realiza mediante la API de OpenWeatherMap cuyos parametros son:")
    print("ciudad (ingresada por el usuario), unidades metricas, idioma espa√±ol.")
    print("Los datos obtenidos incluyen: temperatura, sensacion t√©rmica, humedad, condiciones clim√°ticas y velocidad del viento. Cada consulta es registrada automaticamente en el archivo CSV junto con usuario, ciudad, fecha y hora, y los datos anteriormente mencionados.")
    print("- üìäEstad√≠sticas globales de uso: El archivo CSV se procesa para calcular:")
    print("Total de consultas registradas, Ciudad m√°s consultada y tempreatura promedio.")
    print("El archivo queda preparado para ser exportado y con herramientas externas poder preparar diferentes tipos de gr√°ficos.")
    print("- Consulta de vestimenta mediante Inteligencia Artificial: El m√≥dulo de IA permite que el usuario obtenga un consejo de vestimenta personalizado.")
    print("El usuario puede utilizar la √∫ltima consulta, seleccionar alguna especifica de su historial o realizar una consulta en el momento.")
    print("Los datos de la consulta se env√≠an en un prompt a Gemini que genera una recomendacion de vestimenta para el usuario.")
    print("\n!! Todas las interacciones con las API se realizan con APIKEY seguras cargadas en un archivo .env")
    print("\nAspectos t√©cnicos destacados:")
    print("‚òº Programaci√≥n modular utilizando funciones para cada funci√≥nalidad del programa.")
    print("‚òº Manejo de archivos CSV para el almacenamiento de datos.")
    print("‚òº Integracion de APIs externas: OpenWeatherMap (datos clim√°ticos) y Google Gemini (IA generativa).")
    print("‚òº Manejo de errores frente a problemas de conexion, datos invalidos o archivos inexistentes.")
    print("‚òº Validaci√≥n de contrase√±as seguras con diferentes criterios.")
    print("\nDesarrollado por: Allona, Ema; Blanco, Malena; Chaves Alvarez, Victoria; Hitters, Phimtanaya (Zoe) y Payss√©, Mia ")
    print("Grupo: ")
    print("Tecnolog√≠a Admisi√≥n ITBA - 1C 2025")



